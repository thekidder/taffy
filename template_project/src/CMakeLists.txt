CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(Boost_USE_STATIC_LIBS ON)

FIND_PACKAGE(Boost COMPONENTS signals thread date_time REQUIRED)
FIND_PACKAGE(Freetype REQUIRED)
IF(UNIX)
  FIND_PACKAGE(Fontconfig REQUIRED)  
ENDIF(UNIX)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(SFML REQUIRED COMPONENTS Window System)
FIND_PACKAGE(SORE REQUIRED)
FIND_PACKAGE(ZLIB REQUIRED)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${FREETYPE_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${SFML_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${SORE_INCLUDE_DIR})

SET(CMAKE_VERSION_OUT ${CMAKE_CURRENT_SOURCE_DIR}/cmake_version.h)
SET(CMAKE_VERSION_IN  ${CMAKE_CURRENT_SOURCE_DIR}/cmake_version.h.in)
CONFIGURE_FILE(${CMAKE_VERSION_IN} ${CMAKE_VERSION_OUT})

SET(${PROJECT_NAME}_SRCS 
  debug_gui.cpp main.cpp state_default.cpp version_info.cpp app.rc)
  
SET(${PROJECT_NAME}_HEADERS 
  app_log.h debug_gui.h state_default.h ${CMAKE_VERSION_OUT})

IF(UNIX)
  SET(CMAKE_CXX_FLAGS "-Wall")
ENDIF(UNIX)

SOURCE_GROUP("Source Files" FILES ${${PROJECT_NAME}_SRCS})
SOURCE_GROUP("Header Files" FILES ${${PROJECT_NAME}_HEADERS})

ADD_EXECUTABLE(${PROJECT_NAME} WIN32
  ${${PROJECT_NAME}_SRCS} ${${PROJECT_NAME}_HEADERS})

SET_TARGET_PROPERTIES(
${PROJECT_NAME}
PROPERTIES
  DEBUG_POSTFIX _debug
  OUTPUT_NAME ${PROJECT_NAME}
  RUNTIME_OUTPUT_DIRECTORY ../bin
  COMPILE_DEFINITIONS_DEBUG DEBUG
)
TARGET_LINK_LIBRARIES(
  ${PROJECT_NAME} 

  ${Boost_LIBRARIES}
  ${FONTCONFIG_LIBRARIES}
  ${FREETYPE_LIBRARY}
  ${GLEW_LIBRARY}
  ${OPENGL_gl_LIBRARY}
  ${OPENGL_glu_LIBRARY}
  ${SFML_LIBRARY}
  ${SORE_LIBRARY}
  ${ZLIB_LIBRARY})

SET_PROPERTY(TARGET ${PROJECT_NAME} PROPERTY INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/lib/)

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION .)